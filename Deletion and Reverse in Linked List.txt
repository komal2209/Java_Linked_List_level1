Deletion and Reverse in Linked List

Given a Circular Linked List of size N. The task is to delete the given node in the circular linked list and then print the reverse of the circular linked list.

 

Example 1:
Input:
5
2 5 7 8 10
8
Output:
10 7 5 2
Explanation: 
After deleting 8 from the given circular linked 
list, it has elements as 2, 5, 7, 10. Now, 
reversing this list will result in 10, 7, 5, 2.
 

Example 2:
Input:
4
1 7 8 10
8

Output:
10 7 1

Explanation:
After deleting 8 from the given circular linked 
list, it has elements as 1, 7,10. Now, reversing 
this list will result in 10, 7, 1.
-----------------------------------------------------------------------------

class GFG
{
    //This method returns the head of the LL after deleting node with value d.
    public static Node deleteNode(Node head,int d)
    {
        //Add your code here.
        if(head==null)
        {
            return null;
        }
        if(head.data==d)
        {
            head=head.next;
        }
        Node curr=head;
        while(curr.next!=null)
        {
            if(curr.next.data==d)
            {
                curr.next=curr.next.next;
                break;
            }
            else
            {
                curr=curr.next;
            }
            
        }
        return head;
    }
    //This method returns the head node of the reversed Linked list.
    public static Node reverse(Node head)
    {
        //Add your code here
        
        if(head==null)
        {
            return null;
        }
        Node curr=head;
        Node PREV=null;
        while(curr!=null)
        {
            Node NEXT=curr.next;
            curr.next=PREV;
            PREV=curr;
            curr=NEXT;
        }
        return PREV.next;
    }
}