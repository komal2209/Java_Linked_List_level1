Delete node in Doubly Linked List
Given a doubly linked list and a position. The task is to delete a node from given position in a doubly linked list.

Example 1:

Input:
LinkedList = 1 <--> 3 <--> 4 
x = 3
Output: 1 3  
Explanation: After deleting the node at
position 3 (position starts from 1),
the linked list will be now as 1->3.
Example 2:

Input:
LinkedList = 1 <--> 5 <--> 2 <--> 9  
x = 1
Output: 5 2 9
----------------------------------------------------------------------------------------------------------------------------
Expected Time Complexity : O(N)
Expected Auxilliary Space : O(1)



class Solution
{
    // function returns the head of the linkedlist
    Node deleteNode(Node head,int x)
    {
	// Your code here	
	
	int count=1;
	 if(x==1 && head!=null)
	 {
	     return head.next;
	 }
	 
	 Node curr=head;
	 Node prev=null;
	 
	 while(curr!=null && curr.next!=null)
	 {
	     if(count!=x)
	     {
	       prev=curr;
	       curr=curr.next;
	       count++;
	       
	     }
	     else
	     break;
	     
	 }
	 prev.next=curr.next;
	 
	return head;
    }
}