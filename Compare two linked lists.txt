Compare two linked lists

Given two string, represented as linked lists (every character is a node->data in the linked list). Write a function compare() that works similar to strcmp(), i.e., it returns 0 if both strings are same, 1 if first linked list is lexicographically greater, and -1 if second is lexicographically greater.

Example:
Input:
2
5
a b a b a
4
a b a a
3
a a b
3
a a b

Output:
1
0

--------------------------------------------
Time Complexity=Theta(n)
Space Complexity=O(1)

class GfG
{
    int compare(Node node1, Node node2)
    {
      //Your code here
      if(node1==null && node2==null)
          return 0;
      
        if(node1!=null && node2==null)
         return 1;
       if(node2!=null && node1==null)
        return -1;
      
      if(node1.next==null && node2.next==null)
      {
          if(node1.data==node2.data)
          return 0;
          
          else if(node1.data >node2.data)
          return 1;
          
          else if(node1.data<node2.data)
          return -1;
      }
    
      
     Node curr1=node1;
     Node curr2=node2;
      while(curr1!=null && curr1!=null)
      {
          if(curr1.data==curr2.data)
          {
              curr1=curr1.next;
              curr2=curr2.next;
          }
          else if(curr1.data>curr2.data)
              return 1;
          else if(curr1.data<curr2.data)
              return -1;

      }
      
      if(curr1!=null && curr2==null)
      return 1;
      if( curr2!=null && curr1==null )
      return -1;
      
      return 0;
    }
}
