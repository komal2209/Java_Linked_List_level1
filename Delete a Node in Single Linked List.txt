Delete a Node in Single Linked List
Given a singly linked list and an integer x.Delete xth node from the singly linked list.

Example 1:
Input: 1 -> 3 -> 4 
       x = 3
Output: 1 -> 3
Explanation:
After deleting the node at 3rd
position (1-base indexing), the
linked list is as 1 -> 3.
 
Example 2:
Input: 1 -> 5 -> 2 -> 9 
x = 2
Output: 1 -> 2 -> 9
Explanation: 
After deleting the node at 2nd
position (1-based indexing), the
linked list is as 1 -> 2 -> 9.
--------------------------------------------------------------------------------------------

Time Complexity=O(X-2)
space complexity=O(1)

class GfG
{
    Node deleteNode(Node head, int x)
    {
	// Your code here	
	
	if(head==null)
	return head;
	
	if(x==1)
	return head.next;
	Node curr=head;
	int i=0;
	while(i<x-2)
	{
	   curr=curr.next;
	   i++;
	}
curr.next=curr.next.next;
return head;
    }
}



---------------------------------------------------------------------------------------
class GfG
{
    Node deleteNode(Node head, int x)
    {
	// Your code here	
	if(head==null)
	    return null;
	if(x==1 && head.next==null)
	    return null;
	 if(x==1 && head.next!=null)
        return head.next;
	
	Node curr=head;
	for(int i=1;i<x-1;i++)
	{
	        curr=curr.next;
	}
	curr.next=curr.next.next;
	return head;
	
    }
}
